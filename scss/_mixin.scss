@mixin flex-center($direccion: row, $gap: 0) {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: $direccion;
    gap: $gap;
}



  // Definir mixin para flexbox
@mixin flexbox($direccion, $justificar, $alinear) {
    display: flex;
    flex-direction: $direccion;
    justify-content: $justificar;
    align-items: $alinear;
}
  
// Definir mixin para grid
@mixin gridfooter($columnas, $min-ancho, $max-ancho, $espacio-entre-columnas) {
    display: grid;
    grid-template-columns: repeat($columnas, minmax($min-ancho, $max-ancho));
    grid-column-gap: $espacio-entre-columnas;
}

@mixin gridGalery($columnas, $max-ancho, $filas,$max-ancho-filas ,$espacio-entre-columnas) {
    display: grid;
    grid-template-columns: repeat($columnas, minmax(0, $max-ancho));
    grid-template-rows: repeat($filas, minmax(0, $max-ancho-filas));
    gap: $espacio-entre-columnas;
    padding: $espacio-entre-columnas;
}

// Mixin para las posiciones de los elementos de la galería
@mixin gallery-item($row, $row-span, $column, $column-span) {
    grid-row: $row / span $row-span;
    grid-column: $column / span $column-span;
}
  
@mixin card-properties($bg-color) {
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    position: absolute;
    transition: transform 0.6s ease;
    background: $bg-color;
}
  
// Mixin para definir el efecto de volteo al hacer hover
@mixin opinion-card-hover-effect {
  
    &:hover {
        .opinion-card__front {
          transform: rotateY(-180deg);
        }
  
        .opinion-card__back {
          transform: rotateY(0deg);
        }
    }
}


@mixin hover-animation{
    transition: all 0.5s ease-in-out;
    color: color('blanco');
    border-bottom: color('blanco') 2px solid;
    border-top: color('blanco') 2px solid;

    animation: menosmas 0.5s ease-in-out ;
    cursor: pointer;

}

@mixin crear-boton($type) {
    @if $type == 1 {
        #{$bg}: color('blanco');
        color: color('naranja');
        border: 2px solid color('naranja');
        padding: 0.5rem 1rem;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease;

        &:hover {
              animation: 1s flash 1;
              #{$bg}: color('naranja');
              color: color('blanco');
        } 
    }
    @else if $type == 2 {
        #{$bg}: color('blanco');
        color: color('naranja');
        padding: 0.5rem 1rem;
        border: 1px color('naranja') solid;
        border-radius: 5px;
        cursor: pointer;
        transition: all s ease;
        box-shadow: inset 0 0 0 0 #ffffff;
        -webkit-transition: ease-out 0.8s;
        -moz-transition: ease-out 0.8s;
        transition: ease-out 0.8s;
        
        &:hover {
            color: color('blanco');
            box-shadow: inset 400px 0 0 0 color('naranja');
        }
    }
}


// Definir función para calcular espaciado
@function calcular-espaciado($numero-columnas, $ancho-columna, $espacio-entre-columnas) {
    @return ($numero-columnas * $ancho-columna) + (($numero-columnas - 1) * $espacio-entre-columnas);
  }
  

  

@keyframes menosmas{
    0%{
        width: 0%;
    }
    100%{
        width: 100%;
    }

}

@keyframes flash{
    50%{
      scale: 1;
    }
    25% ,75%{
        scale: 0.9;
    }
}